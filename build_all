#!/bin/bash
os() {
  case `uname` in
    Linux )
      # CentOS, RHEL, Ubuntu, Debian, openSUSE, SLES, SciL, Amazon
      awk '{
  if (length($0) == 0) next;
  sub("Welcome to",""); # Appears in openSUSE and SLES
  if (match($0, "Red Hat Enterprise Linux")) { print "RHEL"; }
  else if (match($0, "SUSE Linux Enterprise Server")) { print "SLES"; }
  else if (match($0, "Scientific Linux")) { print "SciL"; }
  else { print $1; }
  exit 0
}' /etc/issue
      [ $? -ne 0 ] && return 1
      ;;
    Darwin )
      echo MacOS
      ;;
    * )
      uname
      ;;
  esac
  return 0
}
#
os_ver() {
  case `uname` in
    Linux )
      # CentOS, RHEL, Ubuntu, Debian, openSUSE, SLES, SciL, Amazon
      lsb_release -sd | awk '{
  if (length($0) == 0) next;
  sub("^[^0-9.]*", "");
  sub("\\(.*$", "");
  sub("[^0-9.]*$", "");
  print $0;
  exit 0
}'
      [ ${PIPESTATUS[0]} -ne 0 -o ${PIPESTATUS[1]} -ne 0 ] && return 1
      ;;
    Darwin )
      sw_vers | awk '/^ProductVersion:/ {
  sub("^[^0-9.]*", ""); sub("[^0-9.]*$", "");
  print $0;
  exit 0
}'
      [ ${PIPESTATUS[0]} -ne 0 -o ${PIPESTATUS[1]} -ne 0 ] && return 1
      ;;
    * )
      return 1
      ;;
  esac
  return 0
}
#
arch() {
  case `uname -m` in
    i386 | i486 | i586 | i686 )
      echo i386
      ;;
    x86_64 | x64 )
      echo x86_64
      ;;
    * )
      uname -m
      ;;
  esac
  return 0
}
#
# Main
#
unset JAVA_HOME
case `os` in
  CentOS | RHEL | SciL )
    ./centos-prereq
    [ $? -ne 0 ] && exit 1
    touch .prereq_done
    ;;
  Ubuntu )
    ./ubuntu-prereq
    [ $? -ne 0 ] && exit 1
    if [ ! -f .prereq_done ]; then
      patch -N -p0 < vendor/cmake-udev.patch
      [ $? -ne 0 ] && exit 1
      case `os_ver` in
        12.* )
          apt-get -y install libudev-dev
          [ $? -ne 0 ] && exit 1
          ;;
        14.* )
          if [ ! -s /lib/`arch`-linux-gnu/libudev.a ]; then
            # Build static libudev
            cd udev
            [ $? -ne 0 ] && exit 1
            ./build_udev
            [ $? -ne 0 ] && exit 1
            cd ..
            [ $? -ne 0 ] && exit 1
          fi
          ;;
      esac
    fi
    touch .prereq_done
    ;;
  Debian )
    ./debian-prereq
    [ $? -ne 0 ] && exit 1
    if [ ! -f .prereq_done ]; then
      patch -N -p0 < vendor/cmake-udev.patch
      [ $? -ne 0 ] && exit 1
      case `os_ver` in
        7.* )
          if [ ! -s /lib/`arch`-linux-gnu/libudev.a ]; then
            # Build static libudev
            cd udev
            [ $? -ne 0 ] && exit 1
            ./build_udev
            [ $? -ne 0 ] && exit 1
            cd ..
            [ $? -ne 0 ] && exit 1
          fi
          ;;
      esac
    fi
    touch .prereq_done
    ;;
  * )
    echo "Unsupported operating system: `os`" 1>&2
    exit 1
    ;;
esac
#
cmake_ver=`cmake --version 2> /dev/null | awk '{split($3, a, "."); printf("%02d%02d%02d", a[1], a[2], a[3]); exit}'`
if [ "$cmake_ver" -lt "030000" ]; then
  # Build latest cmake
  cd cmake
  [ $? -ne 0 ] && exit 1
  ./build_cmake
  [ $? -ne 0 ] && exit 1
  cd ..
  [ $? -ne 0 ] && exit 1
fi
make 2>&1 | tee make.log
[ $? -ne 0 ] && exit 1
tail -1 make.log | grep -q 'Error [12]'
[ ${PIPESTATUS[0]} -ne 0 -o ${PIPESTATUS[1]} -eq 0 ] && exit 1
cd package
[ $? -ne 0 ] && exit 1
./build_package
[ $? -ne 0 ] && exit 1
case `os` in
  Ubuntu | Debian )
    ./build_debian_package
    [ $? -ne 0 ] && exit 1
    ;;
esac
#
exit 0
